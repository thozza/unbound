# Copyright 2007 NLnet Labs
# See the file LICENSE for the license
# 
# Standard installation pathnames

QUIET=yes
ifeq "$(QUIET)" "yes"
  Q=@
  INFO=@echo
else
  Q=
  INFO=@:
endif

SHELL=@SHELL@
VERSION=@PACKAGE_VERSION@
srcdir=@srcdir@
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
mandir=@mandir@
libdir=@libdir@
# datarootdir is here to please some checkers, use datadir.
datarootdir=@datarootdir@
datadir=@datadir@
includedir=@includedir@
doxygen=@doxygen@
libtool=@libtool@
ldnsdir=@ldnsdir@
staticexe=@staticexe@

YACC=@YACC@
LEX=@LEX@
CC=@CC@
CPPFLAGS=-I. @CPPFLAGS@ @DEFS@
CFLAGS=-I. @CFLAGS@
LDFLAGS=@LDFLAGS@
LIBS=@LIBS@
LIBOBJS=@LIBOBJS@
RUNTIME_PATH=@RUNTIME_PATH@
DATE=$(shell date +%Y%m%d)
LIBTOOL=$(libtool)
ifeq "$(QUIET)" "yes"
  LIBTOOL+=--quiet
endif
BUILD=build/

LINT=splint
LINTFLAGS=+quiet -weak -warnposix -unrecog -Din_addr_t=uint32_t -Du_int=unsigned -Du_char=uint8_t -preproc -Drlimit=rlimit64
# compat with openssl linux edition.
LINTFLAGS+="-DBN_ULONG=unsigned long" -Dkrb5_int32=int "-Dkrb5_ui_4=unsigned int" -DPQ_64BIT=uint64_t

INSTALL=$(srcdir)/install-sh

COMMON_SRC=$(wildcard services/*.c services/cache/*.c util/*.c \
	util/data/*.c util/storage/*.c iterator/*.c validator/*.c) \
	util/configparser.c util/configlexer.c testcode/checklocks.c
COMMON_OBJ=$(addprefix $(BUILD),$(COMMON_SRC:.c=.o))
COMPAT_OBJ=$(addprefix $(BUILD)compat/,$(LIBOBJS))
UNITTEST_SRC=$(wildcard testcode/unit*.c) testcode/readhex.c $(COMMON_SRC)
UNITTEST_OBJ=$(addprefix $(BUILD),$(UNITTEST_SRC:.c=.o)) $(COMPAT_OBJ)
DAEMON_SRC=$(wildcard daemon/*.c) $(COMMON_SRC)
DAEMON_OBJ=$(addprefix $(BUILD),$(DAEMON_SRC:.c=.o)) $(COMPAT_OBJ)
TESTBOUND_SRC=testcode/testbound.c testcode/ldns-testpkts.c \
	daemon/worker.c daemon/daemon.c daemon/stats.c testcode/replay.c \
	testcode/fake_event.c $(filter-out util/netevent.c \
	services/listen_dnsport.c services/outside_network.c, $(COMMON_SRC))
TESTBOUND_OBJ=$(addprefix $(BUILD),$(TESTBOUND_SRC:.c=.o)) $(COMPAT_OBJ)
LOCKVERIFY_SRC=testcode/lock_verify.c $(COMMON_SRC)
LOCKVERIFY_OBJ=$(addprefix $(BUILD),$(LOCKVERIFY_SRC:.c=.o)) $(COMPAT_OBJ)
PKTVIEW_SRC=testcode/pktview.c testcode/readhex.c $(COMMON_SRC)
PKTVIEW_OBJ=$(addprefix $(BUILD),$(PKTVIEW_SRC:.c=.o)) $(COMPAT_OBJ)
ALL_SRC=$(COMMON_SRC) $(UNITTEST_SRC) $(DAEMON_SRC) \
	$(TESTBOUND_SRC) $(LOCKVERIFY_SRC)
ALL_OBJ=$(addprefix $(BUILD),$(ALL_SRC:.c=.o) \
	$(addprefix compat/,$(LIBOBJS))) $(COMPAT_OBJ)

COMPILE=$(LIBTOOL) --tag=CC --mode=compile $(CC) $(CPPFLAGS) $(CFLAGS)
LINK=$(LIBTOOL) --tag=CC --mode=link $(CC) $(staticexe) $(RUNTIME_PATH) $(CFLAGS) $(LDFLAGS)
LINK_LIB=$(LIBTOOL) --tag=CC --mode=link $(CC) $(CFLAGS) $(LDFLAGS) -release $(VERSION)

$(BUILD)%.o:    $(srcdir)/%.c 
	$(INFO) Build $<
	@if test ! -d $(dir $@); then $(INSTALL) -d $(patsubst %/,%,$(dir $@)); fi
	$Q$(COMPILE) -c $< -o $@

.PHONY:	clean realclean doc lint all install uninstall

all:	$(COMMON_OBJ) unbound unittest testbound lock-verify pktview

unbound:	$(DAEMON_OBJ)
	$(INFO) Link $@
	$Q$(LINK) -o $@ $^ $(LIBS)

unittest:	$(UNITTEST_OBJ)
	$(INFO) Link $@
	$Q$(LINK) -o $@ $^ $(LIBS)

testbound:	$(TESTBOUND_OBJ)
	$(INFO) Link $@
	$Q$(LINK) -o $@ $^ $(LIBS)

lock-verify:	$(LOCKVERIFY_OBJ)
	$(INFO) Link $@
	$Q$(LINK) -o $@ $^ $(LIBS)

pktview:	$(PKTVIEW_OBJ)
	$(INFO) Link $@
	$Q$(LINK) -o $@ $^ $(LIBS)

#testcode/ldns-testpkts.c:	$(ldnsdir)/examples/ldns-testpkts.c \
#			$(ldnsdir)/examples/ldns-testpkts.h
#	cp $(ldnsdir)/examples/ldns-testpkts.c testcode/ldns-testpkts.c
#	cp $(ldnsdir)/examples/ldns-testpkts.h testcode/ldns-testpkts.h

util/config_file.c:	util/configparser.h
util/configlexer.c:  $(srcdir)/util/configlexer.lex util/configparser.h
	$(INFO) Lex $<
ifeq "$(strip $(LEX))" ":"
	$Qecho "Need to rebuild lexer, but no lex program"
	exit 1
else
	@if test ! -d util; then $(INSTALL) -d util; fi
	$Qecho "#include \"util/configyyrename.h\"" > $@
	$Q$(LEX) -t $< >> $@
endif

util/configparser.c util/configparser.h:  $(srcdir)/util/configparser.y
	$(INFO) Yacc $<
	@if test ! -d util; then $(INSTALL) -d util; fi
	$Q$(YACC) -d -o util/configparser.c $<

clean:
	rm -f *.o *.d *.lo *~ tags
	rm -rf autom4te.cache .libs build doc/html

realclean: clean
	rm -f config.status config.log config.h.in config.h
	rm -f configure config.sub config.guess ltmain.sh aclocal.m4 libtool
	rm -f util/configlexer.c util/configparser.c util/configparser.h
	rm -f Makefile 

$(BUILD)%.lint:    $(srcdir)/%.c 
	$(INFO) Lint $<
	@if test ! -d $(dir $@); then $(INSTALL) -d $(patsubst %/,%,$(dir $@)); fi
	$Q$(LINT) $(LINTFLAGS) -I. -I$(srcdir) -I$(ldnsdir)/include $<
	$Qtouch $@

lint:	$(addprefix $(BUILD),$(filter-out util/configparser.lint,$(filter-out util/configlexer.lint,$(sort $(ALL_SRC:.c=.lint)))))

tags:	$(srcdir)/*.[ch] $(srcdir)/*/*.[ch]
	ctags  -f $(srcdir)/tags $(srcdir)/*.[ch] $(srcdir)/*/*.[ch]

doc:
ifdef doxygen
	$(doxygen) $(srcdir)/doc/unbound.doxygen
endif

install:
	$(INSTALL) -d $(bindir)
	$(INSTALL) -d $(mandir)
	$(INSTALL) -d $(mandir)/man8
	$(INSTALL) -d $(mandir)/man5
	$(LIBTOOL) --mode=install cp unbound $(bindir)/unbound
	$(INSTALL) -c -m 644 $(srcdir)/doc/unbound.8 $(mandir)/man8
	$(INSTALL) -c -m 644 $(srcdir)/doc/unbound.conf.5 $(mandir)/man5

uninstall:
	rm -f -- $(bindir)/unbound 
	rm -f -- $(mandir)/man8/unbound.8 $(mandir)/man5/unbound.conf.5

# Automatic dependencies.
$(BUILD)%.d: $(srcdir)/%.c
	$(INFO) Depend $<
	@if test ! -d $(dir $@); then $(INSTALL) -d $(patsubst %/,%,$(dir $@)); fi
	$Q$(SHELL) -ec '$(CC) -MM $(CPPFLAGS) $(CFLAGS) $< \
	              | sed '\''s!\(.*\)\.o[ :]*!$(dir $@)\1.o $@ : !g'\'' > $@; \
	              [ -s $@ ] || rm -f $@'

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),realclean)
-include $(addprefix $(BUILD),$(ALL_SRC:.c=.d))
endif
endif
